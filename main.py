import math, telebot, requests, time, random, wikipedia, qrcode
import os
import logging
import psycopg2
from time import sleep
from telebot import types
from bs4 import BeautifulSoup
from config import *
from flask import Flask, request

bot = telebot.TeleBot(BOT_TOKEN)
server = Flask(__name__)
logger = telebot.logger
logger.setLevel(logging.DEBUG)

db = psycopg2.connect(DB_URI, sslmode="require")
cursor = db.cursor()

url = "https://mainfin.ru/currency/omsk"
request_get = requests.get(url)
soup = BeautifulSoup(request_get.text, "html.parser")
price_usd = soup.find("span", id="buy_usd").text
price_euro = soup.find("span", id="buy_eur").text

@bot.message_handler(commands=["start"])
def start(message):
    id = message.from_user.id
    username = message.from_user.username
    name = message.from_user.first_name
    cursor.execute(f"SELECT id FROM users WHERE id = {id}")
    result_id = cursor.fetchone()

    if not result_id:
        cursor.execute("INSERT INTO users(id, username, name, games, score) VALUES (%s, %s, %s, %s, %s)", (id, username, name, 0, 0))
        cursor.execute("INSERT INTO date (id, games, score, games_darts, score_darts, games_number, score_number, games_kosti, score_kosti, games_bowling, score_bowling, games_football, score_football, games_basket, score_basket, games_moneta, score_moneta) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (id, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
        db.commit()

    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton("üßæ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤")
    item2 = types.KeyboardButton("üíé –§—É–Ω–∫—Ü–∏–∏")
    item3 = types.KeyboardButton("üõ† –ü—Ä–æ—á–µ–µ")
    markup.row(item1)
    markup.row(item2)
    markup.row(item3)
    bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç " + message.from_user.first_name + " üëã" +", —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup = markup)
   
@bot.message_handler(commands = ["help"])
def help(message):
	bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ /start")

@bot.message_handler(content_types = ["text"])
def bot_message(message):
    if message.chat.type == "private":
        
        # –ü–†–û–ß–ï–ï
        if message.text == "üõ† –ü—Ä–æ—á–µ–µ":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
            item2 = types.KeyboardButton("üìù –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è")
            item3 = types.KeyboardButton("üìç –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)

		# –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø –ò –£–õ–£–ß–®–ï–ù–ò–Ø
        elif message.text == "üìù –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–î–∞ ‚úÖ")
            item2 = types.KeyboardButton("–ù–µ—Ç ‚õî")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.from_user.id, "–ñ–µ–ª–∞–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é?", reply_markup = markup)

        elif message.text == "–î–∞ ‚úÖ":
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —É–ª—É—á—à–µ–Ω–∏—è –≤ —á–∞—Ç! ‚§µÔ∏è")
            bot.register_next_step_handler(message, up_bot)

        elif message.text == "–ù–µ—Ç ‚õî":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
            item2 = types.KeyboardButton("üìù –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è")
            item3 = types.KeyboardButton("üìç –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)

		# –ò–ù–§–û–†–ú–ê–¶–ò–Ø

        elif message.text == "üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üÜî –£–∑–Ω–∞—Ç—å ID")
            item2 = types.KeyboardButton("üìë –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
            item3 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ü—Ä–æ—á–µ–µ")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)

        elif message.text == "üìë –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ":
            bot.send_message(message.from_user.id, "–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏) üôÇ.\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º - @glinskyoffical")

        elif message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üÜî –£–∑–Ω–∞—Ç—å ID")
            item2 = types.KeyboardButton("üìë –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
            item3 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ü—Ä–æ—á–µ–µ")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)

        elif message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ü—Ä–æ—á–µ–µ":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
            item2 = types.KeyboardButton("üìù –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è")
            item3 = types.KeyboardButton("üìç –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)					

        elif message.text == "üÜî –£–∑–Ω–∞—Ç—å ID":
            bot.send_message(message.from_user.id, "–í–∞—à ID - " + str(message.from_user.id))

		# –¢–ê–ë–õ–ò–¶–ê –õ–ò–î–ï–†–û–í

        elif message.text == "üßæ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤":

            id = message.from_user.id
            username = message.from_user.username
            name = message.from_user.first_name
            cursor.execute(f"SELECT id FROM users WHERE id = {id}")
            result_id = cursor.fetchone()

            if not result_id:
                cursor.execute("INSERT INTO users(id, username, name, games, score) VALUES (%s, %s, %s, %s, %s)", (id, username, name, 0, 0))
                cursor.execute("INSERT INTO date (id, games, score, games_darts, score_darts, games_number, score_number, games_kosti, score_kosti, games_bowling, score_bowling, games_football, score_football, games_basket, score_basket, games_moneta, score_moneta) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (id, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
                db.commit()

            bot.send_message(message.from_user.id, "–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ —Å—Ä–µ–¥–∏ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤—ã–π–≥—Ä–∞–ª–∏ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞)")
            bot.send_message(message.from_user.id, "–ò–≥—Ä | –ü–æ–±–µ–¥ | –£—á–∞—Å—Ç–Ω–∏–∫")

            sortirovka = (f"SELECT * FROM users ORDER BY score DESC")
            cursor.execute(sortirovka)
            sort = cursor.fetchall()

            for index, row in enumerate(sort, start = 1):
                bot.send_message(message.from_user.id, f"{index})     {row[4]}  |  {row[3]}  | {row[2]} - (@{row[1]})")
                
                limit = 8
                if index == limit:
                    break

		# –ì–û–†–û–°–ö–û–ü

        elif message.text == "üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø":	
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–õ–µ–≤ ‚ôåÔ∏è")
            item2 = types.KeyboardButton("–¢–µ–ª–µ—Ü ‚ôâÔ∏è ")
            item3 = types.KeyboardButton("–û–≤–µ–Ω ‚ôàÔ∏è")
            item4 = types.KeyboardButton("–ë–ª–∏–∑–Ω–µ—Ü—ã ‚ôäÔ∏è")
            item5 = types.KeyboardButton("–†–∞–∫ ‚ôãÔ∏è")
            item6 = types.KeyboardButton("–î–µ–≤–∞ ‚ôçÔ∏è")
            item7 = types.KeyboardButton("–í–µ—Å—ã ‚ôéÔ∏è")
            item8 = types.KeyboardButton("–°–∫–æ—Ä–ø–∏–æ–Ω ‚ôèÔ∏è")
            item9 = types.KeyboardButton("–°—Ç—Ä–µ–ª–µ—Ü ‚ôêÔ∏è")
            item10 = types.KeyboardButton("–ö–æ–∑–µ—Ä–æ–≥ ‚ôëÔ∏è")
            item11 = types.KeyboardButton("–í–æ–¥–æ–ª–µ–π ‚ôíÔ∏è")
            item12 = types.KeyboardButton("–†—ã–±—ã ‚ôìÔ∏è")
            item13 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
            markup.row(item1, item2, item3)
            markup.row(item4, item5, item6)
            markup.row(item7, item8, item9)
            markup.row(item10, item11, item12)
            markup.row(item13)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞", reply_markup = markup)	


        elif message.text == "–õ–µ–≤ ‚ôåÔ∏è":
            url = "https://horo.mail.ru/prediction/leo/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text

            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–õ–µ–≤ - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–õ–µ–≤ - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)

        elif message.text == "–õ–µ–≤ - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/leo/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text

            bot.send_message(message.from_user.id, today + " - *–õ–µ–≤* ‚ôåÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")

        elif message.text == "–õ–µ–≤ - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/leo/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text

            bot.send_message(message.from_user.id, tomorrow + " - *–õ–µ–≤* ‚ôåÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")

        elif message.text == "–¢–µ–ª–µ—Ü ‚ôâÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–¢–µ–ª–µ—Ü - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–¢–µ–ª–µ—Ü - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)

        elif message.text == "–¢–µ–ª–µ—Ü - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/taurus/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text

            bot.send_message(message.from_user.id, today + " - *–¢–µ–ª–µ—Ü* ‚ôâÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")

        elif message.text == "–¢–µ–ª–µ—Ü - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/taurus/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text

            bot.send_message(message.from_user.id, tomorrow + " - *–¢–µ–ª–µ—Ü* ‚ôâÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")

        elif message.text == "–û–≤–µ–Ω ‚ôàÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–û–≤–µ–Ω - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–û–≤–µ–Ω - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–û–≤–µ–Ω - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/aries/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–û–≤–µ–Ω* ‚ôàÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–û–≤–µ–Ω - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/aries/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–û–≤–µ–Ω* ‚ôàÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–ë–ª–∏–∑–Ω–µ—Ü—ã ‚ôäÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–ë–ª–∏–∑–Ω–µ—Ü—ã - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–ë–ª–∏–∑–Ω–µ—Ü—ã - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–ë–ª–∏–∑–Ω–µ—Ü—ã - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/gemini/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–ë–ª–∏–∑–Ω–µ—Ü—ã* ‚ôäÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–ë–ª–∏–∑–Ω–µ—Ü—ã - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/gemini/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–ë–ª–∏–∑–Ω–µ—Ü—ã* ‚ôäÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–†–∞–∫ ‚ôãÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–†–∞–∫ - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–†–∞–∫ - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–†–∞–∫ - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/cancer/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–†–∞–∫* ‚ôãÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")        
        
        elif message.text == "–†–∞–∫ - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/cancer/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–†–∞–∫* ‚ôãÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")	        
        
        elif message.text == "–î–µ–≤–∞ ‚ôçÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–î–µ–≤–∞ - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–î–µ–≤–∞ - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–î–µ–≤–∞ - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/virgo/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–î–µ–≤–∞* ‚ôçÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–î–µ–≤–∞ - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/virgo/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–î–µ–≤–∞* ‚ôçÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–í–µ—Å—ã ‚ôéÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–í–µ—Å—ã - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–í–µ—Å—ã - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–í–µ—Å—ã - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/libra/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–í–µ—Å—ã* ‚ôéÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–í–µ—Å—ã - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/libra/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–í–µ—Å—ã* ‚ôéÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")	        
        
        elif message.text == "–°–∫–æ—Ä–ø–∏–æ–Ω ‚ôèÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–°–∫–æ—Ä–ø–∏–æ–Ω - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–°–∫–æ—Ä–ø–∏–æ–Ω - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–°–∫–æ—Ä–ø–∏–æ–Ω - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/scorpio/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–°–∫–æ—Ä–ø–∏–æ–Ω* ‚ôèÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–°–∫–æ—Ä–ø–∏–æ–Ω - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/scorpio/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–°–∫–æ—Ä–ø–∏–æ–Ω* ‚ôèÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–°—Ç—Ä–µ–ª–µ—Ü ‚ôêÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–°—Ç—Ä–µ–ª–µ—Ü - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–°—Ç—Ä–µ–ª–µ—Ü - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–°—Ç—Ä–µ–ª–µ—Ü - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/sagittarius/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–°—Ç—Ä–µ–ª–µ—Ü* ‚ôêÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")        
        
        elif message.text == "–°—Ç—Ä–µ–ª–µ—Ü - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/sagittarius/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–°—Ç—Ä–µ–ª–µ—Ü* ‚ôêÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")        
        
        elif message.text == "–ö–æ–∑–µ—Ä–æ–≥ ‚ôëÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–ö–æ–∑–µ—Ä–æ–≥ - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–ö–æ–∑–µ—Ä–æ–≥ - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–ö–æ–∑–µ—Ä–æ–≥ - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/capricorn/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–ö–æ–∑–µ—Ä–æ–≥* ‚ôëÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")        
        
        elif message.text == "–ö–æ–∑–µ—Ä–æ–≥ - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/capricorn/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–ö–æ–∑–µ—Ä–æ–≥* ‚ôëÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")        
        
        elif message.text == "–í–æ–¥–æ–ª–µ–π ‚ôíÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–í–æ–¥–æ–ª–µ–π - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–í–æ–¥–æ–ª–µ–π - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–í–æ–¥–æ–ª–µ–π - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/aquarius/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–í–æ–¥–æ–ª–µ–π* ‚ôíÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")        
        
        elif message.text == "–í–æ–¥–æ–ª–µ–π - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/aquarius/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–í–æ–¥–æ–ª–µ–π* ‚ôíÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")	        
        
        elif message.text == "–†—ã–±—ã ‚ôìÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–†—ã–±—ã - —Å–µ–≥–æ–¥–Ω—è")
            item2 = types.KeyboardButton("–†—ã–±—ã - –∑–∞–≤—Ç—Ä–∞")
            item3 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å.", reply_markup = markup)     
        
        elif message.text == "–†—ã–±—ã - —Å–µ–≥–æ–¥–Ω—è":
            url = "https://horo.mail.ru/prediction/pisces/today"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, today + " - *–†—ã–±—ã* ‚ôìÔ∏è" +"\n\n" + lev, parse_mode = "Markdown")       
        
        elif message.text == "–†—ã–±—ã - –∑–∞–≤—Ç—Ä–∞":
            url = "https://horo.mail.ru/prediction/pisces/tomorrow"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")
            today = soup.find("span", class_="link__text").text
            tomorrow = soup.find("span", class_="link__text").text
            lev = soup.find("div", class_="article__item article__item_alignment_left article__item_html").text     
            bot.send_message(message.from_user.id, tomorrow + " - *–†—ã–±—ã* ‚ôìÔ∏è" + "\n\n" + lev, parse_mode = "Markdown")																			        

        elif message.text == "üîô –ù–∞–∑–∞–¥":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–õ–µ–≤ ‚ôåÔ∏è")
            item2 = types.KeyboardButton("–¢–µ–ª–µ—Ü ‚ôâÔ∏è")
            item3 = types.KeyboardButton("–û–≤–µ–Ω ‚ôàÔ∏è")
            item4 = types.KeyboardButton("–ë–ª–∏–∑–Ω–µ—Ü—ã ‚ôäÔ∏è")
            item5 = types.KeyboardButton("–†–∞–∫ ‚ôãÔ∏è")
            item6 = types.KeyboardButton("–î–µ–≤–∞ ‚ôçÔ∏è")
            item7 = types.KeyboardButton("–í–µ—Å—ã ‚ôéÔ∏è")
            item8 = types.KeyboardButton("–°–∫–æ—Ä–ø–∏–æ–Ω ‚ôèÔ∏è")
            item9 = types.KeyboardButton("–°—Ç—Ä–µ–ª–µ—Ü ‚ôêÔ∏è")
            item10 = types.KeyboardButton("–ö–æ–∑–µ—Ä–æ–≥ ‚ôëÔ∏è")
            item11 = types.KeyboardButton("–í–æ–¥–æ–ª–µ–π ‚ôíÔ∏è")
            item12 = types.KeyboardButton("–†—ã–±—ã ‚ôìÔ∏è")
            item13 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
            markup.row(item1, item2, item3)
            markup.row(item4, item5, item6)
            markup.row(item7, item8, item9)
            markup.row(item10, item11, item12)
            markup.row(item13)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞", reply_markup = markup)				        
        
        # –§–£–ù–ö–¶–ò–ò       
        elif message.text == "üíé –§—É–Ω–∫—Ü–∏–∏":             
            id = message.from_user.id
            username = message.from_user.username
            name = message.from_user.first_name
            cursor.execute(f"SELECT id FROM users WHERE id = {id}")
            result_id = cursor.fetchone()

            if not result_id:
                cursor.execute("INSERT INTO users(id, username, name, games, score) VALUES (%s, %s, %s, %s, %s)", (id, username, name, 0, 0))
                cursor.execute("INSERT INTO date (id, games, score, games_darts, score_darts, games_number, score_number, games_kosti, score_kosti, games_bowling, score_bowling, games_football, score_football, games_basket, score_basket, games_moneta, score_moneta) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (id, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
                db.commit()
                   
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("üí∞ –ö—É—Ä—Å –≤–∞–ª—é—Ç")
            item2 = types.KeyboardButton("üåç –ü–æ–≥–æ–¥–∞")
            item3 = types.KeyboardButton("üé∞ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
            item4 = types.KeyboardButton("üé° –°—ã–≥—Ä–∞—Ç—å —Å –±–æ—Ç–æ–º")
            item5 = types.KeyboardButton("üìñ –í–∏–∫–∏")
            item6 = types.KeyboardButton("üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø")
            item7 = types.KeyboardButton("üìç –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.row(item1, item2)
            markup.row(item3, item4)
            markup.row(item5, item6)
            markup.row(item7)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)    
        
        elif message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏":
            id = message.from_user.id
            username = message.from_user.username
            name = message.from_user.first_name
            cursor.execute(f"SELECT id FROM users WHERE id = {id}")
            result_id = cursor.fetchone()

            if not result_id:
                cursor.execute("INSERT INTO users(id, username, name, games, score) VALUES (%s, %s, %s, %s, %s)", (id, username, name, 0, 0))
                cursor.execute("INSERT INTO date (id, games, score, games_darts, score_darts, games_number, score_number, games_kosti, score_kosti, games_bowling, score_bowling, games_football, score_football, games_basket, score_basket, games_moneta, score_moneta) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (id, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
                db.commit()

            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("üí∞ –ö—É—Ä—Å –≤–∞–ª—é—Ç")
            item2 = types.KeyboardButton("üåç –ü–æ–≥–æ–¥–∞")
            item3 = types.KeyboardButton("üé∞ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
            item4 = types.KeyboardButton("üé° –°—ã–≥—Ä–∞—Ç—å —Å –±–æ—Ç–æ–º")
            item5 = types.KeyboardButton("üìñ –í–∏–∫–∏")
            item6 = types.KeyboardButton("üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø")
            item7 = types.KeyboardButton("üìç –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.row(item1, item2)
            markup.row(item3, item4)
            markup.row(item5, item6)
            markup.row(item7)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)       

        elif message.text == "üìñ –í–∏–∫–∏":
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å: ")
            bot.register_next_step_handler(message, wiki)       
        
        elif message.text == "üìç –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            name = message.from_user.first_name     
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üßæ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤")
            item2 = types.KeyboardButton("üíé –§—É–Ω–∫—Ü–∏–∏")
            item3 = types.KeyboardButton("üõ† –ü—Ä–æ—á–µ–µ")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id,  str(name) + ", —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup = markup)     
        
        # –ö–£–†–° –í–ê–õ–Æ–¢        
        elif message.text == "üí∞ –ö—É—Ä—Å –≤–∞–ª—é—Ç":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üìà –ö—É—Ä—Å –≤–∞–ª—é—Ç")
            item2 = types.KeyboardButton("üîÅ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏")
            item3 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
            markup.row(item1, item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)       
        
        elif message.text == "üìà –ö—É—Ä—Å –≤–∞–ª—é—Ç":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üíµ –î–æ–ª–ª–∞—Ä")
            item2 = types.KeyboardButton("üí∂ –ï–≤—Ä–æ")
            item3 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ö—É—Ä—Å –í–∞–ª—é—Ç")
            markup.row(item1, item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É üíµ üí∂", reply_markup = markup)      
        
        elif message.text == "üíµ –î–æ–ª–ª–∞—Ä":
            bot.send_message(message.chat.id, "üíµ –î–æ–ª–ª–∞—Ä –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç - "+ price_usd +" ‚ÇΩ")     
        
        elif message.text == "üí∂ –ï–≤—Ä–æ":
            bot.send_message(message.chat.id, "üí∂ –ï–≤—Ä–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç - "+ price_euro +" ‚ÇΩ")      
        
        elif message.text == "üîÅ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏":	
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üí¥ –†—É–±–ª–∏ –≤ üíµ –î–æ–ª–ª–∞—Ä")
            item2 = types.KeyboardButton("üí¥ –†—É–±–ª–∏ –≤ üí∂ –ï–≤—Ä–æ")
            item3 = types.KeyboardButton("üíµ –î–æ–ª–ª–∞—Ä –≤ üí¥ –†—É–±–ª–∏")
            item4 = types.KeyboardButton("üí∂ –ï–≤—Ä–æ –≤ üí¥ –†—É–±–ª–∏")
            item5 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ö—É—Ä—Å –í–∞–ª—é—Ç")
            markup.row(item1, item3)
            markup.row(item2, item4)
            markup.row(item5)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)       
        
        elif message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ö—É—Ä—Å –í–∞–ª—é—Ç":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üìà –ö—É—Ä—Å –≤–∞–ª—é—Ç")
            item2 = types.KeyboardButton("üîÅ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏")
            item3 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
            markup.row(item1, item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)       
        
        elif message.text == "üí¥ –†—É–±–ª–∏ –≤ üíµ –î–æ–ª–ª–∞—Ä":
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏\n" + price_usd + " ‚ÇΩ" + " = 1 USD")
            bot.register_next_step_handler(message, rubl_dollar)        
        
        elif message.text == "üí¥ –†—É–±–ª–∏ –≤ üí∂ –ï–≤—Ä–æ":
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏\n" + price_euro + " ‚ÇΩ" + " = 1 EURO")
            bot.register_next_step_handler(message, rubl_euro)      
        
        elif message.text == "üíµ –î–æ–ª–ª–∞—Ä –≤ üí¥ –†—É–±–ª–∏":
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏\n1 USD = " + price_usd + " ‚ÇΩ")
            bot.register_next_step_handler(message, dollar_rubl)        
        
        elif message.text == "üí∂ –ï–≤—Ä–æ –≤ üí¥ –†—É–±–ª–∏":
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏\n1 EURO = " + price_euro + " ‚ÇΩ")
            bot.register_next_step_handler(message, euro_rubl)      
        
        # –ü–û–ì–û–î–ê        
        elif message.text == "üåç –ü–æ–≥–æ–¥–∞":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üåç –û–º—Å–∫")
            item2 = types.KeyboardButton("üåç –ú–æ—Å–∫–≤–∞")
            item3 = types.KeyboardButton("üåç –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫")
            item4 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            markup.row(item4)
            bot.send_message(message.from_user.id, "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç?\n–ï—Å–ª–∏ –∑–¥–µ—Å—å –Ω–µ—Ç—É –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø—Ä–µ–¥–ª–æ–∂–∫—É, –∏ —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –¥–æ–±–∞–≤–ª—é)", reply_markup = markup)        
        
        # –û–ú–°–ö      
        elif message.text == "üåç –û–º—Å–∫":
        
            url = "https://prognoz3.ru/—Ä–æ—Å—Å–∏—è/–æ–º—Å–∫–∞—è-–æ–±–ª–∞—Å—Ç—å/–ø–æ–≥–æ–¥–∞-–≤-–æ–º—Å–∫–µ"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")

            time = soup.find("div", class_="b-weather_current_date").text

            sunrise_time = soup.find("span", class_="sunrise_time").text
            sunset_time = soup.find("span", class_="sunset_time").text      
            temp = soup.find("span", class_="temperature").text
            note = soup.find("span", class_="note").text
            feelslike = soup.find("span", class_="feelslike").text
            precipitation = soup.find("span", class_="precipitation").text
            pressure = soup.find("span", class_="pressure").text
            humidity = soup.find("span", class_="humidity").text        

            bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–∞ –≤ –û–º—Å–∫–µ\n" + time + "\n\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:  " + str(temp) + " - " + str(note) + "\n" + str(feelslike) + "\n" + str(precipitation) + "\n" + str(pressure) + "\n" + str(humidity) + "\n–í–æ—Å—Ö–æ–¥ - " + str(sunrise_time) + "\n–ó–∞–∫–∞—Ç - " + str(sunset_time))     
        
        # –ú–û–°–ö–í–ê        
        elif message.text == "üåç –ú–æ—Å–∫–≤–∞":
        
            url = "https://prognoz3.ru/—Ä–æ—Å—Å–∏—è/–º–æ—Å–∫–æ–≤—Å–∫–∞—è-–æ–±–ª–∞—Å—Ç—å/–ø–æ–≥–æ–¥–∞-–≤-–º–æ—Å–∫–≤–µ"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")

            time = soup.find("div", class_="b-weather_current_date").text       
            sunrise_time = soup.find("span", class_="sunrise_time").text
            sunset_time = soup.find("span", class_="sunset_time").text

            temp = soup.find("span", class_="temperature").text
            note = soup.find("span", class_="note").text
            feelslike = soup.find("span", class_="feelslike").text
            precipitation = soup.find("span", class_="precipitation").text
            pressure = soup.find("span", class_="pressure").text
            humidity = soup.find("span", class_="humidity").text        

            bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ\n" + time + "\n\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:  " + str(temp) + " - " + str(note) + "\n" + str(feelslike) + "\n" + str(precipitation) + "\n" + str(pressure) + "\n" + str(humidity) + "\n–í–æ—Å—Ö–æ–¥ - " + str(sunrise_time) + "\n–ó–∞–∫–∞—Ç - " + str(sunset_time))        
        
        # –ù–û–í–û–°–ò–ë–ò–†–°–ö       
        elif message.text == "üåç –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫":
        
            url = "https://prognoz3.ru/—Ä–æ—Å—Å–∏—è/–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è-–æ–±–ª–∞—Å—Ç—å/–ø–æ–≥–æ–¥–∞-–≤-–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–µ"
            request = requests.get(url)
            soup = BeautifulSoup(request.text, "html.parser")

            time = soup.find("div", class_="b-weather_current_date").text       
            sunrise_time = soup.find("span", class_="sunrise_time").text
            sunset_time = soup.find("span", class_="sunset_time").text

            temp = soup.find("span", class_="temperature").text
            note = soup.find("span", class_="note").text
            feelslike = soup.find("span", class_="feelslike").text
            precipitation = soup.find("span", class_="precipitation").text
            pressure = soup.find("span", class_="pressure").text
            humidity = soup.find("span", class_="humidity").text        

            bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–∞ –≤ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–µ\n" + time + "\n\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:  " + str(temp) + " - " + str(note) + "\n" + str(feelslike) + "\n" + str(precipitation) + "\n" + str(pressure) + "\n" + str(humidity) + "\n–í–æ—Å—Ö–æ–¥ - " + str(sunrise_time) + "\n–ó–∞–∫–∞—Ç - " + str(sunset_time))      
        
        # –†–ê–ù–î–û–ú–ù–û–ï –ß–ò–°–õ–û       
        elif message.text == "üé∞ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üé≤ –û—Ç 0 –¥–æ 10")
            item2 = types.KeyboardButton("üé≤ –û—Ç 0 –¥–æ 100")
            item3 = types.KeyboardButton("üé≤ –û—Ç 0 –¥–æ 1000")
            item4 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            markup.row(item4)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω", reply_markup = markup)       
        
        elif message.text == "üé≤ –û—Ç 0 –¥–æ 10":
            bot.send_message(message.chat.id, "*–í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ -* " + str(random.randint(0,10)), parse_mode = "Markdown")     
        
        elif message.text == "üé≤ –û—Ç 0 –¥–æ 100":
            bot.send_message(message.chat.id, "*–í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ -* " + str(random.randint(0,100)), parse_mode = "Markdown")        
        
        elif message.text == "üé≤ –û—Ç 0 –¥–æ 1000":
            bot.send_message(message.chat.id, "*–í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ -* " + str(random.randint(0,1000)), parse_mode = "Markdown")       
        
        # –°–´–ì–†–ê–¢–¨ –° –ë–û–¢–û–ú       
        elif message.text == "üé° –°—ã–≥—Ä–∞—Ç—å —Å –±–æ—Ç–æ–º":
            id = message.from_user.id
            username = message.from_user.username
            name = message.from_user.first_name
            cursor.execute(f"SELECT id FROM users WHERE id = {id}")
            result_id = cursor.fetchone()

            if not result_id:
                cursor.execute("INSERT INTO users(id, username, name, games, score) VALUES (%s, %s, %s, %s, %s)", (id, username, name, 0, 0))
                cursor.execute("INSERT INTO date (id, games, score, games_darts, score_darts, games_number, score_number, games_kosti, score_kosti, games_bowling, score_bowling, games_football, score_football, games_basket, score_basket, games_moneta, score_moneta) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (id, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
                db.commit()

            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üßæ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤")
            item2 = types.KeyboardButton("üé∞ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ")
            item3 = types.KeyboardButton("üé≤ –ò–≥—Ä–∞ *–ö–æ—Å—Ç–∏*")
            item4 = types.KeyboardButton("üé≥ –ë–æ—É–ª–∏–Ω–≥")
            item5 = types.KeyboardButton("‚öΩÔ∏è –§—É—Ç–±–æ–ª")
            item6 = types.KeyboardButton("üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª")
            item7 = types.KeyboardButton("üü° –û—Ä–µ–ª & –†–µ—à–∫–∞")
            item8 = types.KeyboardButton("üéØ –î–∞—Ä—Ç—Å")
            item9 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3, item4, item5)
            markup.row(item6, item7, item8)
            markup.row(item9)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É", reply_markup = markup)       
        
        elif message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥":
            id = message.from_user.id
            username = message.from_user.username
            name = message.from_user.first_name
            cursor.execute(f"SELECT id FROM users WHERE id = {id}")
            result_id = cursor.fetchone()

            if not result_id:
                cursor.execute("INSERT INTO users(id, username, name, games, score) VALUES (%s, %s, %s, %s, %s)", (id, username, name, 0, 0))
                cursor.execute("INSERT INTO date (id, games, score, games_darts, score_darts, games_number, score_number, games_kosti, score_kosti, games_bowling, score_bowling, games_football, score_football, games_basket, score_basket, games_moneta, score_moneta) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)", (id, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
                db.commit()

            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üßæ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤")
            item2 = types.KeyboardButton("üé∞ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ")
            item3 = types.KeyboardButton("üé≤ –ò–≥—Ä–∞ *–ö–æ—Å—Ç–∏*")
            item4 = types.KeyboardButton("üé≥ –ë–æ—É–ª–∏–Ω–≥")
            item5 = types.KeyboardButton("‚öΩÔ∏è –§—É—Ç–±–æ–ª")
            item6 = types.KeyboardButton("üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª")
            item7 = types.KeyboardButton("üü° –û—Ä–µ–ª & –†–µ—à–∫–∞")
            item8 = types.KeyboardButton("üéØ –î–∞—Ä—Ç—Å")
            item9 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
            markup.row(item1)
            markup.row(item2) 
            markup.row(item3, item4, item5)
            markup.row(item6, item7, item8)
            markup.row(item9)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É", reply_markup = markup)       
        
        # –û–†–ï–õ & –†–ï–®–ö–ê      
        elif message.text == "üü° –û—Ä–µ–ª & –†–µ—à–∫–∞":
            id = message.from_user.id
            name = message.from_user.first_name
            cursor.execute(f"UPDATE users SET games = games + 1 WHERE id = {id}")
            cursor.execute(f"UPDATE date SET games = games + 1 WHERE id = {id}")
            cursor.execute(f"UPDATE date SET games_moneta = games_moneta + 1 WHERE id = {id}")
            db.commit()

            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("–û—Ä–µ–ª")
            item2 = types.KeyboardButton("–†–µ—à–∫–∞")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "–û—Ä–µ–ª –∏–ª–∏ –†–µ—à–∫–∞ ?" , reply_markup = markup)			
            bot.register_next_step_handler(message, moneta)      
        
        # –î–ê–†–¢–°     
        elif message.text == "üéØ –î–∞—Ä—Ç—Å":
            name = message.from_user.first_name     
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ë—Ä–æ—Å–∏—Ç—å –¥—Ä–æ—Ç–∏–∫ üéØ")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "üéØ –ö–∏–¥–∞–µ—Ç –¥—Ä–æ—Ç–∏–∫ - " + str(name) , reply_markup = markup)        
        
        elif message.text == "–ë—Ä–æ—Å–∏—Ç—å –¥—Ä–æ—Ç–∏–∫ üéØ":
            id = message.from_user.id
            name = message.from_user.first_name
            cursor.execute(f"UPDATE users SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games_darts = games_darts + 1 WHERE id = {id}")
            db.commit()

            ball = bot.send_dice(message.chat.id, 'üéØ')
            sleep(5)

            if ball.dice.value == 1:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –Ω–µ –ø–æ–ø–∞–ª")
            elif ball.dice.value == 2:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø–æ–ø–∞–ª –≤ " + str(ball.dice.value))
            elif ball.dice.value == 3:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø–æ–ø–∞–ª –≤ " + str(ball.dice.value))
            elif ball.dice.value == 4:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø–æ–ø–∞–ª –≤ " + str(ball.dice.value))
            elif ball.dice.value == 5:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø–æ–ø–∞–ª –≤ " + str(ball.dice.value))
            elif ball.dice.value == 6:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø–æ–ø–∞–ª –≤ —è–±–ª–æ—á–∫–æ!")

            sleep(0.5)	
            bot.send_message(message.chat.id, "üéØ –ö–∏–¥–∞–µ—Ç –¥—Ä–æ—Ç–∏–∫ –ë–û–¢")
            sleep(1.5)
            ball_two = bot.send_dice(message.chat.id, 'üéØ')
            sleep(5)

            if ball_two.dice.value == 1:
                bot.send_message(message.chat.id, "–ë–û–¢ –Ω–µ –ø–æ–ø–∞–ª")
            elif ball_two.dice.value == 2:
                bot.send_message(message.chat.id, "–ë–û–¢ –ø–æ–ø–∞–ª –≤ " + str(ball_two.dice.value))
            elif ball_two.dice.value == 3:
                bot.send_message(message.chat.id, "–ë–û–¢ –ø–æ–ø–∞–ª –≤ " + str(ball_two.dice.value))
            elif ball_two.dice.value == 4:
                bot.send_message(message.chat.id, "–ë–û–¢ –ø–æ–ø–∞–ª –≤ " + str(ball_two.dice.value))
            elif ball_two.dice.value == 5:
                bot.send_message(message.chat.id, "–ë–û–¢ –ø–æ–ø–∞–ª –≤ " + str(ball_two.dice.value))
            elif ball_two.dice.value == 6:
                bot.send_message(message.chat.id, "–ë–û–¢ –ø–æ–ø–∞–ª –≤ —è–±–ª–æ—á–∫–æ!")

            sleep(0.5)
            bot.send_message(message.chat.id, "‚è≥ –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
            sleep(0.5)
            bot.send_message(message.chat.id, "‚åõÔ∏è –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
            sleep(0.5)

            if ball.dice.value > ball_two.dice.value:
                id = message.from_user.id
                cursor.execute(f"UPDATE users SET score = score + 1 WHERE id = {id}")
                cursor.execute(f"UPDATE date SET score = score + 1 WHERE id = {id}")
                cursor.execute(f"UPDATE date SET score_darts = score_darts + 1 WHERE id = {id}")
                db.commit()

                bot.send_message(message.chat.id, "*–ü–æ–±–µ–¥–∏–ª - *" + str(name), parse_mode = "Markdown")
                bot.send_message(message.chat.id, "ü•≥")
            elif ball.dice.value == ball_two.dice.value:
                bot.send_message(message.chat.id, "*–ù–∏—á—å—è!*", parse_mode = "Markdown")
                bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÇ")
            else:
                bot.send_message(message.chat.id, "üòë *–ü–æ–±–µ–¥–∏–ª –ë–û–¢*", parse_mode = "Markdown")
                bot.send_message(message.chat.id, "üòû")

            sleep(2)        
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ë—Ä–æ—Å–∏—Ç—å –¥—Ä–æ—Ç–∏–∫ üéØ")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "–°—ã–≥—Ä–∞–µ—Ç–µ –µ—â–µ —Ä–∞–∑?" , reply_markup = markup)      
        
        # –ë–ê–°–ö–ï–¢–ë–û–õ     
        elif message.text == "üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª":
            name = message.from_user.first_name
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ö–∏–Ω—É—Ç—å –º—è—á üèÄ")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "üèÄ –ö–∏–¥–∞–µ—Ç –º—è—á - " + str(name) , reply_markup = markup)       
        
        elif message.text == "–ö–∏–Ω—É—Ç—å –º—è—á üèÄ":
            id = message.from_user.id
            name = message.from_user.first_name
            cursor.execute(f"UPDATE users SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games_basket = games_basket + 1 WHERE id = {id}")
            db.commit()


            ball = bot.send_dice(message.from_user.id, 'üèÄ')
            sleep(5)

            if ball.dice.value > 3:
                name = message.from_user.first_name
                bot.send_message(message.from_user.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø–æ–ø–∞–ª –≤ –∫–æ–ª—å—Ü–æ, –∏ –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –æ—Ü–µ–Ω–∫—É " + str(ball.dice.value))
                sleep(1.5)
            else:
                bot.send_message(message.from_user.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è")   

            bot.send_message(message.from_user.id, "üèÄ –ö–∏–¥–∞–µ—Ç –º—è—á –ë–û–¢")
            sleep(1.5)
            ball_two = bot.send_dice(message.chat.id, 'üèÄ')
            sleep(5)

            if ball_two.dice.value > 3:
                bot.send_message(message.from_user.id, "–ë–û–¢ –ø–æ–ø–∞–ª –≤ –∫–æ–ª—å—Ü–æ, –∏ –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –æ—Ü–µ–Ω–∫—É " + str(ball_two.dice.value))
                sleep(1.5)
            else:
                bot.send_message(message.from_user.id, "–ë–û–¢ –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è")

            bot.send_message(message.from_user.id, "‚è≥ –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
            sleep(1.5)
            bot.send_message(message.chat.id, "‚åõÔ∏è –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
           
            if ball.dice.value > 3:
                if ball_two.dice.value > 3:
                    if ball.dice.value > ball_two.dice.value:
                        id = message.from_user.id
                        cursor.execute(f"UPDATE users SET score = score + 1 WHERE id = {id}")
                        cursor.execute(f"UPDATE date SET score = score + 1 WHERE id = {id}")
                        cursor.execute(f"UPDATE date SET score_basket = score_basket + 1 WHERE id = {id}")
                        db.commit()

                        bot.send_message(message.from_user.id, "*–ü–æ–±–µ–¥–∏–ª - *" + str(name), parse_mode = "Markdown")
                        bot.send_message(message.from_user.id, "ü•≥")
                    elif ball.dice.value == ball_two.dice.value:
                        bot.send_message(message.from_user.id, "*–ù–∏—á—å—è!*", parse_mode = "Markdown")
                        bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÇ")
                    else:
                        bot.send_message(message.from_user.id, "üòë *–ü–æ–±–µ–¥–∏–ª –ë–û–¢*", parse_mode = "Markdown")
                        bot.send_message(message.from_user.id, "üòû")
                else:
                    id = message.from_user.id
                    cursor.execute(f"UPDATE users SET score = score + 1 WHERE id = {id}")
                    cursor.execute(f"UPDATE date SET score = score + 1 WHERE id = {id}")
                    cursor.execute(f"UPDATE date SET score_basket = score_basket + 1 WHERE id = {id}")
                    db.commit()

                    bot.send_message(message.from_user.id, "*–ü–æ–±–µ–¥–∏–ª - *" + str(name), parse_mode="Markdown")
                    bot.send_message(message.chat.id, "ü•≥")
            elif ball.dice.value < 3:
                if ball_two.dice.value < 3:
                    bot.send_message(message.from_user.id, "–ù–∏–∫—Ç–æ –Ω–µ –ø–æ–ø–∞–ª. –ù–∏—á—å—è!")
                    bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÇ")
                else:
                    bot.send_message(message.from_user.id, "üòë *–ü–æ–±–µ–¥–∏–ª –ë–û–¢*", parse_mode = "Markdown")
                    bot.send_message(message.from_user.id, "üòû")
            else:
                bot.send_message(message.from_user.id, "–ù–∏–∫—Ç–æ –Ω–µ –ø–æ–ø–∞–ª. –ù–∏—á—å—è!")
                bot.send_message(message.from_user.id, "ü§∑‚Äç‚ôÇ")

            sleep(1)        
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ö–∏–Ω—É—Ç—å –º—è—á üèÄ")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.from_user.id, "–°—ã–≥—Ä–∞–µ—Ç–µ –µ—â–µ —Ä–∞–∑?" , reply_markup = markup)      
        
        # –§–£–¢–ë–û–õ        
        elif message.text == "‚öΩÔ∏è –§—É—Ç–±–æ–ª":
            name = message.from_user.first_name     
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ü–Ω—É—Ç—å –º—è—á ‚öΩÔ∏è")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "‚öΩÔ∏è –ü–∏–Ω–∞–µ—Ç –º—è—á - " + str(name) , reply_markup = markup)       
        
        elif message.text == "–ü–Ω—É—Ç—å –º—è—á ‚öΩÔ∏è":
            id = message.from_user.id
            name = message.from_user.first_name
            cursor.execute(f"UPDATE users SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games_football = games_football + 1 WHERE id = {id}")
            db.commit()

            ball = bot.send_dice(message.chat.id, '‚öΩÔ∏è')
            sleep(5)

            if ball.dice.value > 2:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø–æ–ø–∞–ª –≤ –≤–æ—Ä–æ—Ç–∞, –∏ –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –æ—Ü–µ–Ω–∫—É " + str(ball.dice.value))
                sleep(1.5)
            else:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è")
                sleep(1.5)

            bot.send_message(message.chat.id, "‚öΩÔ∏è –ü–∏–Ω–∞–µ—Ç –º—è—á –ë–û–¢")
            sleep(1.5)
            ball_two = bot.send_dice(message.chat.id, '‚öΩÔ∏è')
            sleep(5)
   
            if ball_two.dice.value > 2:
                bot.send_message(message.chat.id, "–ë–û–¢ –ø–æ–ø–∞–ª –≤ –≤–æ—Ä–æ—Ç–∞, –∏ –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –æ—Ü–µ–Ω–∫—É " + str(ball_two.dice.value))
                sleep(1.5)
            else:
                bot.send_message(message.chat.id, "–ë–û–¢ –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è")

            sleep(0.5)
            bot.send_message(message.chat.id, "‚è≥ –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
            sleep(0.5)
            bot.send_message(message.chat.id, "‚åõÔ∏è –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
            sleep(0.5)

            if ball.dice.value > 2:
                if ball_two.dice.value > 2:
                    if ball.dice.value > ball_two.dice.value:
                        id = message.from_user.id
                        name = message.from_user.first_name
                        cursor.execute(f"UPDATE users SET score = score + 1 WHERE id = {id}")
                        cursor.execute(f"UPDATE date SET score = score + 1 WHERE id = {id}")
                        cursor.execute(f"UPDATE date SET score_football = score_football + 1 WHERE id = {id}")
                        db.commit()

                        bot.send_message(message.chat.id, "*–ü–æ–±–µ–¥–∏–ª - *" + str(name) , parse_mode = "Markdown")
                        bot.send_message(message.chat.id, "ü•≥")
                    elif ball.dice.value == ball_two.dice.value:
                        bot.send_message(message.chat.id, "*–ù–∏—á—å—è!*", parse_mode = "Markdown")
                        bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÇ")
                    else:
                        bot.send_message(message.chat.id, "üòë *–ü–æ–±–µ–¥–∏–ª –ë–û–¢*", parse_mode = "Markdown")
                        bot.send_message(message.chat.id, "üòû")
                else:
                    id = message.from_user.id
                    name = message.from_user.first_name
                    cursor.execute(f"UPDATE users SET score = score + 1 WHERE id = {id}")
                    cursor.execute(f"UPDATE date SET score = score + 1 WHERE id = {id}")
                    cursor.execute(f"UPDATE date SET score_football = score_football + 1 WHERE id = {id}")
                    db.commit()

                    bot.send_message(message.chat.id, "*–ü–æ–±–µ–¥–∏–ª - *" + str(name), parse_mode = "Markdown")
                    bot.send_message(message.chat.id, "ü•≥")
            elif ball.dice.value < 2:
                if ball_two.dice.value < 2:
                    bot.send_message(message.chat.id, "–ù–∏–∫—Ç–æ –Ω–µ –ø–æ–ø–∞–ª. –ù–∏—á—å—è!")
                    bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÇ")
                else:
                    bot.send_message(message.chat.id, "üòë *–ü–æ–±–µ–¥–∏–ª –ë–û–¢*", parse_mode = "Markdown")
                    bot.send_message(message.chat.id, "üòû")
            else:
                bot.send_message(message.chat.id, "–ù–∏–∫—Ç–æ –Ω–µ –ø–æ–ø–∞–ª. –ù–∏—á—å—è!")
                bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÇ")

            sleep(1.5)
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ü–Ω—É—Ç—å –º—è—á ‚öΩÔ∏è")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "–°—ã–≥—Ä–∞–µ—Ç–µ –µ—â–µ —Ä–∞–∑?" , reply_markup = markup)      
        
        # –ò–ì–†–ê "–ë–û–£–õ–ò–ù–ì"        
        elif message.text == "üé≥ –ë–æ—É–ª–∏–Ω–≥":
            name = message.from_user.first_name     
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ë—Ä–æ—Å–∏—Ç—å —à–∞—Ä üé≥")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.from_user.id, "üé≥ –ë—Ä–æ—Å–∞–µ—Ç —à–∞—Ä - " + str(name) , reply_markup = markup)     
        
        elif message.text == "–ë—Ä–æ—Å–∏—Ç—å —à–∞—Ä üé≥":
            id = message.from_user.id
            name = message.from_user.first_name
            cursor.execute(f"UPDATE users SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games_bowling = games_bowling + 1 WHERE id = {id}")
            db.commit()

            ball = bot.send_dice(message.chat.id, 'üé≥')
            sleep(5)

            if ball.dice.value == 1:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è")
            elif ball.dice.value == 2:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " —Å–±–∏–ª 1 –∫–µ–≥–ª—é")
            elif ball.dice.value == 3:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " —Å–±–∏–ª " + str(ball.dice.value) + " –∫–µ–≥–ª–∏")
            elif ball.dice.value == 4:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " —Å–±–∏–ª " + str(ball.dice.value) + " –∫–µ–≥–ª–∏")
            elif ball.dice.value == 5:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " —Å–±–∏–ª " + str(ball.dice.value) + " –∫–µ–≥–ª–µ–π")
            elif ball.dice.value == 6:
                bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫ " + str(name) + " –≤—ã–±–∏–ª STRIKE!!")  

            sleep(1.5)
            bot.send_message(message.chat.id, "üé≥ –ë—Ä–æ—Å–∞–µ—Ç —à–∞—Ä –ë–û–¢")
            sleep(1.5)
            ball_two = bot.send_dice(message.chat.id, 'üé≥')
            sleep(5)

            if ball_two.dice.value == 1:
                bot.send_message(message.chat.id, "–ë–û–¢ –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è")
            elif ball_two.dice.value == 2:
                bot.send_message(message.chat.id, "–ë–û–¢ —Å–±–∏–ª 1 –∫–µ–≥–ª—é")
            elif ball_two.dice.value == 3:
                bot.send_message(message.chat.id, "–ë–û–¢ —Å–±–∏–ª " + str(ball_two.dice.value) + " –∫–µ–≥–ª–∏")
            elif ball_two.dice.value == 4:
                bot.send_message(message.chat.id, "–ë–û–¢ —Å–±–∏–ª " + str(ball_two.dice.value) + " –∫–µ–≥–ª–∏")
            elif ball_two.dice.value == 5:
                bot.send_message(message.chat.id, "–ë–û–¢ —Å–±–∏–ª " + str(ball_two.dice.value) + " –∫–µ–≥–ª–µ–π")
            elif ball_two.dice.value == 6:
                bot.send_message(message.chat.id, "–ë–û–¢ –≤—ã–±–∏–ª STRIKE!!")

            sleep(1)
            bot.send_message(message.chat.id, "‚è≥ –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
            sleep(1)
            bot.send_message(message.chat.id, "‚åõÔ∏è –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
            sleep(0.5)

            if ball.dice.value > ball_two.dice.value:
                id = message.from_user.id
                name = message.from_user.first_name
                cursor.execute(f"UPDATE users SET score = score + 1 WHERE id = {id}")
                cursor.execute(f"UPDATE date SET score = score + 1 WHERE id = {id}")
                cursor.execute(f"UPDATE date SET score_bowling = score_bowling + 1 WHERE id = {id}")
                db.commit()

                bot.send_message(message.chat.id, "*–ü–æ–±–µ–¥–∏–ª - *" + str(name), parse_mode = "Markdown")
                bot.send_message(message.chat.id, "ü•≥")
            elif ball.dice.value == ball_two.dice.value:
                bot.send_message(message.chat.id, "*–ù–∏—á—å—è!*", parse_mode = "Markdown")
                bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÇ")
            else:
                bot.send_message(message.chat.id, "üòë *–ü–æ–±–µ–¥–∏–ª –ë–û–¢*", parse_mode = "Markdown")
                bot.send_message(message.chat.id, "üòû")     
            
            sleep(2)        
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ë—Ä–æ—Å–∏—Ç—å —à–∞—Ä üé≥")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "–°—ã–≥—Ä–∞–µ—Ç–µ –µ—â–µ —Ä–∞–∑?" , reply_markup = markup)      
        
        # –ò–ì–†–ê *–ö–û–°–¢–ò*      
        elif message.text == "üé≤ –ò–≥—Ä–∞ *–ö–æ—Å—Ç–∏*":
            name = message.from_user.first_name     
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "üé≤ –ë—Ä–æ—Å–∞–µ—Ç –∫—É–±–∏–∫ - " + str(name) , reply_markup = markup)        
        
        elif message.text == "–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤":
            id = message.from_user.id
            name = message.from_user.first_name
            cursor.execute(f"UPDATE users SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games_kosti = games_kosti + 1 WHERE id = {id}")
            db.commit()

            cube = bot.send_dice(message.chat.id)
            sleep(5)
            bot.send_message(message.chat.id, "–ò–≥—Ä–æ–∫—É " + str(name) + " –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ - " + str(cube.dice.value))
            sleep(1.5)
            bot.send_message(message.chat.id, "üé≤ –ë—Ä–æ—Å–∞–µ—Ç –∫—É–±–∏–∫ –ë–û–¢")
            sleep(1.5)
            cube_two = bot.send_dice(message.chat.id)
            sleep(5)
            bot.send_message(message.chat.id, "–ë–û–¢ –≤—ã–±–∏–ª —á–∏—Å–ª–æ - " + str(cube_two.dice.value))
            sleep(1)
            bot.send_message(message.chat.id, "‚è≥ –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
            sleep(1)
            bot.send_message(message.chat.id, "‚åõÔ∏è –ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
            sleep(2)        
            
            if cube.dice.value > cube_two.dice.value:
                id = message.from_user.id
                name = message.from_user.first_name
                cursor.execute(f"UPDATE users SET score = score + 1 WHERE id = {id}")
                cursor.execute(f"UPDATE date SET score = score + 1 WHERE id = {id}")
                cursor.execute(f"UPDATE date SET score_kosti = score_kosti + 1 WHERE id = {id}")
                db.commit()

                bot.send_message(message.chat.id, "*–ü–æ–±–µ–¥–∏–ª - *" + str(name), parse_mode = "Markdown")
                bot.send_message(message.chat.id, "ü•≥")
            elif cube.dice.value == cube_two.dice.value:
                bot.send_message(message.chat.id, "*–ù–∏—á—å—è!*", parse_mode = "Markdown")
                bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÇ")
            else:
                bot.send_message(message.chat.id, "*–ü–æ–±–µ–¥–∏–ª –ë–û–¢*", parse_mode = "Markdown")
                bot.send_message(message.chat.id, "üòû")     
            
            sleep(1)        
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤")
            item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "–°—ã–≥—Ä–∞–µ—Ç–µ –µ—â–µ —Ä–∞–∑?" , reply_markup = markup)
        
        # –£–ì–ê–î–ê–ô –ß–ò–°–õ–û      
        elif message.text == "üé∞ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("–î–∞)")
            item2 = types.KeyboardButton("–ù–µ—Ç)")
            markup.row(item1)
            markup.row(item2)
            bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å —Å –±–æ—Ç–æ–º –≤ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ?\n–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç—ã.\n–ë–æ—Ç –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10, –∞ –≤–∞–º –Ω—É–∂–Ω–æ —É–≥–∞–¥–∞—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ, –¥–∞—ë—Ç—Å—è 5 –ø–æ–ø—ã—Ç–æ–∫!", reply_markup = markup )        
        
        elif message.text == "–î–∞)":
            id = message.from_user.id
            cursor.execute(f"UPDATE users SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games = games + 1 WHERE id = {id}")
            db.commit()

            cursor.execute(f"UPDATE date SET games_number = games_number + 1 WHERE id = {id}")
            db.commit()

            global counter
            global random_number        
            sleep(0.5)
            bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ. –¢–æ–≥–¥–∞ –Ω–∞—á–Ω–µ–º")
            sleep(0.5)
            bot.send_message(message.chat.id, "–ë–æ—Ç –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ. –£ –≤–∞—Å 5 –ø–æ–ø—ã—Ç–æ–∫!")        
            random_number = random.randint(1, 10)
            counter = 5     
            sleep(0.5)      
            
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("1")
            item2 = types.KeyboardButton("2")
            item3 = types.KeyboardButton("3")
            item4 = types.KeyboardButton("4")
            item5 = types.KeyboardButton("5")
            item6 = types.KeyboardButton("6")
            item7 = types.KeyboardButton("7")
            item8 = types.KeyboardButton("8")
            item9 = types.KeyboardButton("9")
            item10 = types.KeyboardButton("10")     
            markup.row(item1, item2, item3)
            markup.row(item4, item5, item6)
            markup.row(item7, item8, item9)
            markup.row(item10)      
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ", reply_markup = markup)
            bot.register_next_step_handler(message, number)

        elif message.text == "–ù–µ—Ç)":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton("üßæ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤")
            item2 = types.KeyboardButton("üé∞ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ")
            item3 = types.KeyboardButton("üé≤ –ò–≥—Ä–∞ *–ö–æ—Å—Ç–∏*")
            item4 = types.KeyboardButton("üé≥ –ë–æ—É–ª–∏–Ω–≥")
            item5 = types.KeyboardButton("‚öΩÔ∏è –§—É—Ç–±–æ–ª")
            item6 = types.KeyboardButton("üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª")
            item7 = types.KeyboardButton("üü° –û—Ä–µ–ª & –†–µ—à–∫–∞")
            item8 = types.KeyboardButton("üéØ –î–∞—Ä—Ç—Å")
            item9 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
            markup.row(item1)
            markup.row(item2) 
            markup.row(item3, item4, item5)
            markup.row(item6, item7, item8)
            markup.row(item9)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É", reply_markup = markup)       
        
        # –û–¢–ß–ï–¢ –û –î–û–°–¢–ê–í–ö–ï –°–û–û–ë–©–ï–ù–ò–Ø "–ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø –ò –£–õ–£–ß–®–ï–ù–ò–Ø"      
        elif message.text == "–í—Å–µ –≤–µ—Ä–Ω–æ ‚úÖ":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("üìç –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.row(item1)
            bot.send_message(message.chat.id, "–£—Å–ø–µ—à–Ω–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ!  üì¶", reply_markup = markup)
            chat_id = "1277445345"
            bot.send_message(chat_id, "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—è –æ—Ç " + str(message.from_user.first_name) + " (@" + str(message.from_user.username) + " ) " + "\n\n" + up_text, reply_markup = markup)       
        
        elif message.text == "–•–æ—á—É –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å üìÑ":
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —É–ª—É—á—à–µ–Ω–∏—è –≤ —á–∞—Ç! ‚§µÔ∏è")
            bot.register_next_step_handler(message, up_bot)
        
        elif message.text == "–û—Ç–º–µ–Ω–∞ ‚õîÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
            item1 = types.KeyboardButton("üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
            item2 = types.KeyboardButton("üìù –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è")
            item3 = types.KeyboardButton("üìç –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.row(item1)
            markup.row(item2)
            markup.row(item3)
            bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = markup)	

		# –ò–ù–ê–ß–ï
        else:
            bot.send_message(message.chat.id, "üóø –Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /start –∏–ª–∏ /help")	


# –û–†–ï–õ & –†–ï–®–ö–ê

def moneta(message):
    id = message.from_user.id
    name = message.from_user.first_name
    cursor.execute(f"UPDATE users SET games = games + 1 WHERE id = {id}")
    db.commit()

    cursor.execute(f"UPDATE date SET games = games + 1 WHERE id = {id}")
    db.commit()

    cursor.execute(f"UPDATE date SET games_moneta = games_moneta + 1 WHERE id = {id}")
    db.commit()


    moneta = ["–û—Ä–µ–ª", "–†–µ—à–∫–∞"]
    moneta_random = random.choice(moneta)

    moneta_user = message.text

    stick = open("image/AnimatedSticker.tgs", "rb")
    bot.send_sticker(message.chat.id, stick)
    sleep(3)
    bot.send_message(message.chat.id, str(moneta_random))
    sleep(1)
        
    if moneta_random == moneta_user:
        id = message.from_user.id
        name = message.from_user.first_name
        cursor.execute(f"UPDATE date SET score_moneta = score_moneta + 1 WHERE id = {id}")
        cursor.execute(f"UPDATE date SET score = score + 1 WHERE id = {id}")
        db.commit()
        
        bot.send_message(message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
        sleep(2)
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item1 = types.KeyboardButton("üßæ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤")
        item2 = types.KeyboardButton("üé∞ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ")
        item3 = types.KeyboardButton("üé≤ –ò–≥—Ä–∞ *–ö–æ—Å—Ç–∏*")
        item4 = types.KeyboardButton("üé≥ –ë–æ—É–ª–∏–Ω–≥")
        item5 = types.KeyboardButton("‚öΩÔ∏è –§—É—Ç–±–æ–ª")
        item6 = types.KeyboardButton("üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª")
        item7 = types.KeyboardButton("üü° –û—Ä–µ–ª & –†–µ—à–∫–∞")
        item8 = types.KeyboardButton("üéØ –î–∞—Ä—Ç—Å")
        item9 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
        markup.row(item1)
        markup.row(item2) 
        markup.row(item3, item4, item5)
        markup.row(item6, item7, item8)
        markup.row(item9)
        bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É", reply_markup = markup)
    else:
        bot.send_message(message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!")
        sleep(2)
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item1 = types.KeyboardButton("üßæ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤")
        item2 = types.KeyboardButton("üé∞ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ")
        item3 = types.KeyboardButton("üé≤ –ò–≥—Ä–∞ *–ö–æ—Å—Ç–∏*")
        item4 = types.KeyboardButton("üé≥ –ë–æ—É–ª–∏–Ω–≥")
        item5 = types.KeyboardButton("‚öΩÔ∏è –§—É—Ç–±–æ–ª")
        item6 = types.KeyboardButton("üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª")
        item7 = types.KeyboardButton("üü° –û—Ä–µ–ª & –†–µ—à–∫–∞")
        item8 = types.KeyboardButton("üéØ –î–∞—Ä—Ç—Å")
        item9 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
        markup.row(item1)
        markup.row(item2) 
        markup.row(item3, item4, item5)
        markup.row(item6, item7, item8)
        markup.row(item9)
        bot.send_message(message.from_user.id, "üö© –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É", reply_markup = markup) 



def dollar_rubl(message):
    dollar = 685468974538976564
    while dollar == 685468974538976564:
        try:
            dollar = int(message.text)
            result = int(dollar) * float(price_usd)
            bot.send_message(message.chat.id, "*–†–µ–∑—É–ª—å—Ç–∞—Ç -* " + str('{:.2f}'.format(result)) + " *‚ÇΩ*", parse_mode = "Markdown")
        except Exception:
            bot.send_message(message.chat.id, "–ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ü–∏—Ñ—Ä–∞–º–∏.")
            break
    if dollar == 685468974538976564:
        bot.register_next_step_handler(message, dollar_rubl)

def rubl_dollar(message):
	rubl = 685468974538976564
	while rubl == 685468974538976564:
		try:
			rubl = int(message.text)
			result = int(rubl) / float(price_usd)
			bot.send_message(message.chat.id, "*–†–µ–∑—É–ª—å—Ç–∞—Ç -* " + str('{:.2f}'.format(result)) + " *USD*", parse_mode = "Markdown")
		except Exception:
			bot.send_message(message.chat.id, "–ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ü–∏—Ñ—Ä–∞–º–∏.")
			break
	if rubl == 685468974538976564:
		bot.register_next_step_handler(message, rubl_dollar)
		

def euro_rubl(message):
	euro = 685468974538976564
	while euro == 685468974538976564:
		try:
			euro = int(message.text)
			result = int(euro) * float(price_euro)
			bot.send_message(message.chat.id, "*–†–µ–∑—É–ª—å—Ç–∞—Ç -* " + str('{:.2f}'.format(result)) + " *‚ÇΩ*", parse_mode = "Markdown")
		except Exception:
			bot.send_message(message.chat.id, "–ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ü–∏—Ñ—Ä–∞–º–∏.")
			break
	if euro == 685468974538976564:
		bot.register_next_step_handler(message, euro_rubl)


def rubl_euro(message):
	rubl_two = 685468974538976564
	while rubl_two == 685468974538976564:
		try:
			rubl_two = int(message.text)
			result = int(rubl_two) / float(price_euro)
			bot.send_message(message.chat.id, "*–†–µ–∑—É–ª—å—Ç–∞—Ç -* " + str('{:.2f}'.format(result)) + " *EURO*", parse_mode = "Markdown")
		except Exception:
			bot.send_message(message.chat.id, "–ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ü–∏—Ñ—Ä–∞–º–∏.")
			break
	if rubl_two == 685468974538976564:
		bot.register_next_step_handler(message, rubl_euro)


# –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø –ò –£–õ–£–ß–®–ï–ù–ò–Ø

def up_bot(message):
	global up_text
	up_text = message.text


	markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
	item1 = types.KeyboardButton("–í—Å–µ –≤–µ—Ä–Ω–æ ‚úÖ")
	item2 = types.KeyboardButton("–•–æ—á—É –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å üìÑ")
	item3 = types.KeyboardButton("–û—Ç–º–µ–Ω–∞ ‚õîÔ∏è")
	markup.row(item1)
	markup.row(item2)
	markup.row(item3)

	bot.send_message(message.chat.id, "‚è≥ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ...")
	sleep(1)
	bot.send_message(message.chat.id, "‚åõÔ∏è –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ...")
	sleep(1)
	bot.send_message(message.chat.id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ. \n\n" + str(up_text), reply_markup = markup)


# –£–ì–ê–î–ê–ô –ß–ò–°–õ–û

def number(message):
    global counter
    global random_number
    print("–ó–∞–≥–∞–¥–∞–Ω–æ —á–∏—Å–ª–æ - " + str(random_number))
    number_user = message.text

    if number_user.isdigit():
        if int(number_user) > 10:
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 10")
            bot.register_next_step_handler(message, number)
        elif int(number_user) < 1:
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 10")
            bot.register_next_step_handler(message, number)
        else:
            if int(number_user) == int(random_number): 
                id = message.from_user.id
                name = message.from_user.first_name
                cursor.execute(f"UPDATE users SET score = score + 1 WHERE id = {id}")
                cursor.execute(f"UPDATE date SET score = score + 1 WHERE id = {id}")
                cursor.execute(f"UPDATE date SET score_number = score_number + 1 WHERE id = {id}")
                db.commit()
            
            
                sleep(0.5)
                bot.send_message(message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!")
                sleep(0.5)
                bot.send_message(message.chat.id, "–ë—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ —á–∏—Å–ª–æ - " + str(random_number))
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                item1 = types.KeyboardButton("–î–∞)")
                item2 = types.KeyboardButton("–ù–µ—Ç)")
                markup.row(item1)
                markup.row(item2)
                bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ?)", reply_markup = markup)
            
            elif counter > 1:
                counter -= 1
                sleep(0.5)
                bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω–æ. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: " + str(counter))
                bot.register_next_step_handler(message, number)
                return
            else:
                sleep(0.5)
                bot.send_message(message.chat.id, "–£–≤—ã, –Ω–æ –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ( ‚òπÔ∏è")
                sleep(0.5)
                bot.send_message(message.chat.id, "–ë—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ —á–∏—Å–ª–æ - " + str(random_number))
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                item1 = types.KeyboardButton("–î–∞)")
                item2 = types.KeyboardButton("–ù–µ—Ç)")
                markup.row(item1)
                markup.row(item2)
                bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ?)", reply_markup = markup)
    else:
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ü–∏—Ñ—Ä—É!")
        bot.register_next_step_handler(message, number)


# –í–ò–ö–ò–ü–ï–î–ò–Ø

def wiki(message):
	global search

	wikipedia.set_lang("RU")
	text = message.text

	search = wikipedia.search(text, results = 6)

	if len(search) == 0:
		bot.send_message(message.from_user.id, f"–ü–æ –∑–∞–ø—Ä–æ—Å—É  *'{text}'*  –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! ", parse_mode = "Markdown")

		markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
		item1 = types.KeyboardButton("üìñ –í–∏–∫–∏")
		item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
		markup.row(item1)
		markup.row(item2)
		bot.send_message(message.from_user.id, "–•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å –µ—â–µ —Ä–∞–∑?", reply_markup= markup)

	else:
		for index, result in enumerate(search, start = 0):
			bot.send_message(message.from_user.id, f"{index}) {result}")

		markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
		item1 = types.KeyboardButton("0")
		item2 = types.KeyboardButton("1")
		item3 = types.KeyboardButton("2")
		item4 = types.KeyboardButton("3")
		item5 = types.KeyboardButton("4")
		item6 = types.KeyboardButton("5")
		markup.row(item1, item2)
		markup.row(item3, item4)
		markup.row(item5, item6)

		bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∑–∞–ø—Ä–æ—Å–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å: ", reply_markup = markup)
		bot.register_next_step_handler(message, wiki_result)


def wiki_result(message):
	number = message.text

	try:
		number = int(message.text)
		if number < 0:
			bot.send_message(message.from_user.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω. \n–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç 0 –¥–æ 5")
			bot.register_next_step_handler(message, wiki_result)
		elif number > 5:
			bot.send_message(message.from_user.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω. \n–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç 0 –¥–æ 5")
			bot.register_next_step_handler(message, wiki_result)
		else:
			try:
				wikipedia.set_lang("RU")
				text = wikipedia.summary(search[int(number)])
				bot.send_message(message.from_user.id, str(text))
			except:
				bot.send_message(message.from_user.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å!")

			sleep(2)

			markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
			item1 = types.KeyboardButton("üìñ –í–∏–∫–∏")
			item2 = types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –§—É–Ω–∫—Ü–∏–∏")
			markup.row(item1)
			markup.row(item2)
			bot.send_message(message.from_user.id, "–•–æ—Ç–∏—Ç–µ –µ—â–µ –Ω–∞–π—Ç–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å?", reply_markup= markup)


	except:
		bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!")
		bot.register_next_step_handler(message, wiki_result)








@server.route(f"/{BOT_TOKEN}", methods=["POST"])
def redirect_message():
    json_string = request.get_data().decode("utf-8")
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return "!", 200

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=APP_URL)
    server.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))